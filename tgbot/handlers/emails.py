from telebot import TeleBot
from telebot.types import Message
from email.message import EmailMessage
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
import psycopg2
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

from tgbot.key import from_email, host_mail, port_mail, passsword_mail, username_mail, host_ip, port, username, password

ticket_data = {'mail_to': '', 'category': '', 'text': ''}


def send_support_mail_1(message: Message, bot: TeleBot):
    """
    1. –ó–∞–ø—Ä–æ—Å –∫ –ë–î –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞—Ç–∏–≤—à–µ–≥–æ—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    2. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å "–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ"
    3. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, —Ç–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ—á—Ç—É, –æ–ø—Ä–æ—Å–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É.
    """
    is_user_exist = get_email_by_id(message)

    if len(is_user_exist):
        ticket_data['mail_to'] = is_user_exist[0]
        markup = ReplyKeyboardMarkup(row_width=1, one_time_keyboard=True, resize_keyboard=True)
        markup.add(KeyboardButton('–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—á—Ç–æ–π'),
                   KeyboardButton('–ù–æ–≤—ã–π –í–ö–° –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å –í–ö–°'),
                   KeyboardButton('–ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º'),
                   KeyboardButton('–ü—Ä–æ–±–ª–µ–º—ã —Å Wi-Fi'),
                   KeyboardButton('–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–µ—á–∞—Ç—å—é'),
                   KeyboardButton('–ü—Ä–æ–±–ª–µ–º—ã —Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º –≤ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω–æ–π'),
                   KeyboardButton('üõ†–£–∑–Ω–∞—Ç—å –ø–∞—Ä–æ–ª—å –æ—Ç Wi-Fi (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)'),
                   KeyboardButton('üõ†–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω—É—é (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)'),
                   KeyboardButton('üõ†–ó–∞–ø–æ–ª–Ω–∏—Ç—å Timesheet –≤ Bitrix24 (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)', ),
                   KeyboardButton('–û—Ç–º–µ–Ω–∞'),
                   )
        # msg = bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è', reply_markup=markup)
        msg = bot.reply_to(message, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è', reply_markup=markup)
        bot.register_next_step_handler(msg, send_support_mail_2, bot)


def cancel_chain(message: Message, bot: TeleBot):
    start_markup = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True).add(
        KeyboardButton('–ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ!'))
    bot.send_message(message.chat.id, '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–º–µ–Ω–∞. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ!',
                     reply_markup=start_markup)
    bot.clear_step_handler_by_chat_id(message.chat.id)


def send_support_mail_2(message: Message, bot: TeleBot):
    if message.text in ['–û—Ç–º–µ–Ω–∞',
                        'üõ†–£–∑–Ω–∞—Ç—å –ø–∞—Ä–æ–ª—å –æ—Ç Wi-Fi (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)',
                        'üõ†–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω—É—é (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)',
                        'üõ†–ó–∞–ø–æ–ª–Ω–∏—Ç—å Timesheet –≤ Bitrix24 (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)']:
        cancel_chain(message, bot)

    else:
        cancel_markup = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True).add(
            KeyboardButton('–û—Ç–º–µ–Ω–∞'))

        ticket_data['category'] = message.text
        msg = bot.reply_to(message, '–û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é (—á—Ç–æ –∏ –≥–¥–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ), –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ',
                           reply_markup=cancel_markup)
        bot.register_next_step_handler(msg, send_support_mail_3, bot)


def send_support_mail_3(message: Message, bot: TeleBot):
    if message.text == '–û—Ç–º–µ–Ω–∞':
        bot.clear_step_handler_by_chat_id(message.chat.id)

    start_markup = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True).add(
        KeyboardButton('–ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ!'))

    m = bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É...')
    ticket_data['text'] = message.text
    subject = '–ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –ø–æ —Ç–µ–º–µ: ' + ticket_data['category']
    html = f"""\
    <html>
      <head><h1>–ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –ø–æ —Ç–µ–º–µ: \n{ticket_data['category']}</h1></head>
      <body>
        <hr>
        –¢–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è:<br>
        <i>{ticket_data['text']}</i>
      </body>
    </html>
    """

    part1 = MIMEText(html, 'html')
    msg = MIMEMultipart('alternative')
    msg['Subject'] = subject
    msg['From'] = from_email
    msg['To'] = ', '.join(ticket_data['mail_to'])
    msg.attach(part1)

    # Try to log in to server and send email

    host = smtplib.SMTP(host_mail, port_mail)
    try:
        host.connect(host_mail, port_mail)
        host.ehlo()
        host.starttls()  # Secure the connection
        host.ehlo()
        host.login(username_mail, passsword_mail)

        host.sendmail(from_email, msg['To'], msg.as_string())
        bot.delete_message(message.chat.id, m.id)
        bot.send_message(message.chat.id, '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª—É–∂–±—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏! '
                                          '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ!',
                         reply_markup=start_markup)
        host.close()
    except Exception as e:
        print(e)
    finally:
        host.close()


def get_email_by_id(message: Message):
    with psycopg2.connect(host=host_ip, port=port, database='firstbase1', user=username, password=password) as conn:
        cur = conn.cursor()
        query = "select work_mail from kc_employees t1 where t1.tg_id in (%s);"
        cur.execute(query, ((message.chat.id),))
        res = cur.fetchall()
        # print(res)
        return res
